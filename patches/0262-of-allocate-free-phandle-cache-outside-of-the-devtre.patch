From 7157fe280c247bdeccbd2c4f5789a04b312f192e Mon Sep 17 00:00:00 2001
From: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
Date: Fri, 31 Aug 2018 14:16:30 +0200
Subject: [PATCH 0262/1132] of: allocate / free phandle cache outside of the
 devtree_lock

The phandle cache code allocates memory while holding devtree_lock which
is a raw_spinlock_t. Memory allocation (and free()) is not possible on
RT while a raw_spinlock_t is held.
Invoke the kfree() and kcalloc() while the lock is dropped.

Cc: Rob Herring <robh+dt@kernel.org>
Cc: Frank Rowand <frowand.list@gmail.com>
Cc: devicetree@vger.kernel.org
Signed-off-by: Sebastian Andrzej Siewior <bigeasy@linutronix.de>
---
 drivers/of/base.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/of/base.c b/drivers/of/base.c
index 2c7cf83..850628a 100644
--- a/drivers/of/base.c
+++ b/drivers/of/base.c
@@ -201,6 +201,8 @@ void of_populate_phandle_cache(void)
 	for_each_of_allnodes(np)
 		if (np->phandle && np->phandle != OF_PHANDLE_ILLEGAL)
 			phandles++;
+	raw_spin_unlock_irqrestore(&devtree_lock, flags);
+	kfree(shadow);
 
 	if (!phandles)
 		goto out;
@@ -221,7 +223,6 @@ void of_populate_phandle_cache(void)
 			phandle_cache[np->phandle & phandle_cache_mask] = np;
 		}
 
-out:
 	raw_spin_unlock_irqrestore(&devtree_lock, flags);
 	kfree(shadow);
 }
-- 
2.7.4

